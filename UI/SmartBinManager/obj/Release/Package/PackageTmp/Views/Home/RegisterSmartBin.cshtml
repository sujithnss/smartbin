@model SmartBinManager.Models.SmartBinViewModel
@{
    ViewBag.Title = "Register SmartBin";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("RegisterSmartBin", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Associate a new SmartBin.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.Id, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Id, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProductId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
           
            @Html.DropDownListFor(model => model.ProductId, @ViewBag.ProductId as SelectList, "Select Product")
            @Html.ValidationMessageFor(model => model.ProductId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OrderQuantity, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.OrderQuantity, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.TriggerActionId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TriggerActionId, @ViewBag.TriggerActionId as SelectList, "Select Action")
            @Html.ValidationMessageFor(model => model.TriggerActionId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReOrderLevel, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ReOrderLevel, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
